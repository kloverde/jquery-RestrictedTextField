/**
 * RestrictedTextField v1.0
 * https://www.github.com/kloverde/jquery-RestrictedTextField
 *
 * This software is licensed under the 3-clause BSD license.
 *
 * Copyright (c) 2016 Kurtis LoVerde
 * All rights reserved
 *
 * Donations:  https://paypal.me/KurtisLoVerde/5
 */
!function(e){"use strict";function t(e){return void 0==e||null==e||e.length<1}function n(e,t){var n=Object.prototype.toString.call(e).slice(8,-1);return void 0!==e&&null!==e&&n.toUpperCase()===t.toUpperCase()}function i(e,t,i,l){if(void 0==t||null==t)throw"id is undefined";if(!n(t,"String"))throw"id must be a string";if(t.length<1)throw"id is empty";if(void 0==i||null==i)throw"fullRegex is undefined";if(!n(i,"RegExp"))throw"fullRegex must be a RegExp object";if(void 0!=l&&null!=l&&!n(l,"RegExp"))throw"partialRegex must be a RegExp object";e[t]={fullRegex:i,partialRegex:l}}e.fn.RestrictedTextFieldConfig=function(){var t=e.fn.RestrictedTextFieldConfig.customTypes=e.fn.RestrictedTextFieldConfig.customTypes||[];return{addType:function(e,n,l){i(t,e,n,l)}}},e.fn.restrictedTextField=function(n){function l(){var t=/^-$/,n=/^[-\.\d]$|^-\.$|^-?\d*\.$/,l=/^[\.\d]$|^\.$|^\d*\.$/,d=/^0\.?$|^-\.?$|^-\d*\.$/;(void 0==e.fn.restrictedTextField.types||null==e.fn.restrictedTextField.types)&&(e.fn.restrictedTextField.types=[]);var r=e.fn.restrictedTextField.types=e.fn.restrictedTextField.types||[];i(r,"alpha",/^[a-zA-Z]*$/,null),i(r,"upperAlpha",/^[A-Z]*$/,null),i(r,"lowerAlpha",/^[a-z]*$/,null),i(r,"alphaSpace",/^[a-zA-Z\ ]*$/,null),i(r,"upperAlphaSpace",/^[A-Z\ ]*$/,null),i(r,"lowerAlphaSpace",/^[a-z\ ]*$/,null),i(r,"alphanumeric",/^[a-zA-Z\d]*$/,null),i(r,"upperAlphanumeric",/^[A-Z\d]*$/,null),i(r,"lowerAlphanumeric",/^[a-z\d]*$/,null),i(r,"alphanumericSpace",/^[a-zA-Z\d\ ]*$/,null),i(r,"upperAlphanumericSpace",/^[A-Z\d\ ]*$/,null),i(r,"lowerAlphanumericSpace",/^[a-z\d\ ]*$/,null),i(r,"int",/^0$|^-?[1-9]\d*$/,t),i(r,"positiveInt",/^0$|^[1-9]\d*$/,null),i(r,"negativeInt",/^0$|^-[1-9]\d*$/,t),i(r,"float",/^-?\d*\.?\d+$/,n),i(r,"positiveFloat",/^\d*\.?\d+$/,l),i(r,"negativeFloat",/^-\d*\.?\d+$/,d),i(r,"money",/^-?\d*\.?\d{1,2}$/,n),i(r,"positiveMoney",/^\d*\.?\d{1,2}$/,l),i(r,"negativeMoney",/^-\d*\.?\d{1,2}$/,d),i(r,"accountingMoney",/^\d*\.?\d{1,2}$|^\(\d*\.?\d{1,2}\)$/,/^[\.\d]$|^\.$|^\d*\.$|^\(\d*\.?$|^\(\d*\.\d{1,2}?$/),i(r,"negativeAccountingMoney",/^\(\d*\.?\d{1,2}\)$/,/^\(\d*\.?$|^\(\d*\.\d{1,2}?$/)}function d(e,t){var n=e.val();0===n.length?e.trigger(u):n.length>0&&(p.fullRegex.test(n)?e.trigger(u):(r.preventInvalidInput&&e.val(t),e.trigger(a)))}var r=e.extend({type:null,preventInvalidInput:!0},n),a="validationFailure",u="validationSuccess",o="inputInProgress";(void 0==e.fn.restrictedTextField.types||null==e.fn.restrictedTextField.types)&&l();var p=e.fn.restrictedTextField.types[r.type];if(t(p)&&(void 0!=e.fn.RestrictedTextFieldConfig.customTypes&&null!=e.fn.RestrictedTextFieldConfig.customTypes&&(p=e.fn.RestrictedTextFieldConfig.customTypes[r.type]),t(p)))throw"Invalid type: "+r.type;return this.each(function(){var t=e(this),n="";t.on("keydown paste",function(){n=this.value}),t.on("input",function(){var t=e(this);void 0!=p.partialRegex&&null!=p.partialRegex&&p.partialRegex.test(this.value)?t.trigger(o):d(t,n)}),t.on("blur",function(){d(t,t.val())})})}}(jQuery);
